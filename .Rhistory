import ee
import geemap
# ee.Authenticate()
# ee.Initialize()
import geopandas as gpd
ee.Initialize()
aoi = "~/Documents/Agroforestry/data/twelve_mi_grid_uid.gpkg"
year = 2016
sp = gpd.read_file(aoi)
sp_ee = geemap.gdf_to_ee(sp)
naip = geemap.get_annual_NAIP(year).filterBounds(sp_ee).mosaic()
sp2 = sp.iloc[[0]]
sp_ee2 = geemap.gdf_to_ee(sp2).geometry()
sp_ee2
size = sp_ee.size().getInfo()-1
size
print(i)
i = 0
print(i)
sp2 = sp.iloc[[i]]
sp_ee2 = geemap.gdf_to_ee(sp2).geometry()
image = naip.clip(sp_ee2)
image
filename = filename = "naip"+str(year)+"_" + str(i) + ".tif"
filename
geemap.ee_export_image(
image,
filename=filename,
scale = 1, # scale in meters probably best to call best on x,y of image rather then define.
region=sp_ee2,
file_per_band=False)
aoi = "~/Documents/Agroforestry/testing/subgrid.gpkg"
year = 2016
sp = gpd.read_file(aoi)
# convert it to a GEE object to use as the primary aoi for naip call.
sp_ee = geemap.gdf_to_ee(sp)
# grab naip and filter it to aoi
naip = geemap.get_annual_NAIP(year).filterBounds(sp_ee).mosaic()
# grab a subset of the area
sp2 = sp.iloc[[0]]
sp_ee2 = geemap.gdf_to_ee(sp2).geometry()
sp_ee2
# construct file name
size = sp_ee.size().getInfo()-1
size
size = sp_ee.size().getInfo()
size
i
sp2 = sp.iloc[[i]]
# convert to gee object for
sp_ee2 = geemap.gdf_to_ee(sp2).geometry()
# filter the image
image = naip.clip(sp_ee2)
# define file name
filename = filename = "naip"+str(year)+"_" + str(i) + ".tif"
geemap.ee_export_image(
image,
filename=filename,
scale = 1, # scale in meters probably best to call best on x,y of image rather then define.
region=sp_ee2,
file_per_band=False)
downloadPath = "testing/Downloads"
filename = filename = downloadPath + "naip"+str(year)+"_" + str(i) + ".tif"
filename
filename = filename = downloadPath + "/naip"+str(year)+"_" + str(i) + ".tif"
filename
file_per_band=False)
geemap.ee_export_image(
image,
filename=filename,
scale = 1, # scale in meters probably best to call best on x,y of image rather then define.
region=sp_ee2,
file_per_band=False)
aoi = "~/Documents/Agroforestry/testing/subgrid.gpkg"
year = 2016
downloadPath = "testing/Downloads"
sp = gpd.read_file(aoi)
sp_ee = geemap.gdf_to_ee(sp)
naip = geemap.get_annual_NAIP(str(year)).filterBounds(sp_ee).mosaic()
naip
sp2 = sp.iloc[[0]]
sp_ee2 = geemap.gdf_to_ee(sp2).geometry()
sp_ee2
size = sp_ee.size().getInfo()
size
i
sp2 = sp.iloc[[i]]
# convert to gee object for
sp_ee2 = geemap.gdf_to_ee(sp2).geometry()
# filter the image
image = naip.clip(sp_ee2)
image
filename = filename = downloadPath + "/naip"+str(year)+"_" + str(i) + ".tif"
geemap.ee_export_image(
image,
filename=filename,
scale = 1, # scale in meters probably best to call best on x,y of image rather then define.
region=sp_ee2,
file_per_band=False)
for i in range(size): # set to size when running
print(i)
# grab a subset of the area
sp2 = sp.iloc[[i]]
# convert to gee object for
sp_ee2 = geemap.gdf_to_ee(sp2).geometry()
# filter the image
image = naip.clip(sp_ee2)
# define file name
filename = filename = downloadPath + "/naip"+str(year)+"_" + str(i) + ".tif"
geemap.ee_export_image(
image,
filename=filename,
scale = 1, # scale in meters probably best to call best on x,y of image rather then define.
region=sp_ee2,
file_per_band=False)
for i in range(size): # set to size when running
print(i)
# grab a subset of the area
sp2 = sp.iloc[[i]]
# convert to gee object for
sp_ee2 = geemap.gdf_to_ee(sp2).geometry()
# filter the image
image = naip.clip(sp_ee2)
# define file name
filename = filename = downloadPath + "/naip"+str(year)+"_" + str(i) + ".tif"
geemap.ee_export_image(
image,
filename=filename,
scale = 1, # scale in meters probably best to call best on x,y of image rather then define.
region=sp_ee2,
file_per_band=False)
import os
import leafmap
from samgeo import SamGeo, show_image, download_file, overlay_images, tms_to_geotiff
sam = SamGeo(
model_type="vit_h",
)
import samgeo
import ee
import geemap
import geopandas as gpd
import samgeo
# ee.Authenticate()
ee.Initialize()
reticulate::repl_python()
reticulate::repl_python()
